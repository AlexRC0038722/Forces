<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAwAAAAJmCAIAAABkOXAqAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAG2NJREFUeF7t1l1620BzrdEMJJeZ/8zOGL7o2G87bEqyJZt/QK314MZVkEwRjar9
        X/8BABhGAAIAxhGAAIBxBCAAYBwBCAAYRwACAMYRgACAcQQgAGAcAQgAGEcAAgDGEYAAgHEEIABgHAEI
        ABhHAAIAxhGAAIBxBCAAYBwBCAAYRwACAMYRgACAcQQgAGAcAQgAGEcAAgDGEYAAgHEEIABgHAEIABhH
        AAIAxhGAAIBxBCAAYBwBCAAYRwACAMYRgACAcQQgAGAcAQgAGEcAAgDGEYAAgHEEIABgHAEIABhHAAIA
        xhGAAIBxBCAAYBwBCAAYRwACAMYRgACAcQQgAGAcAQgAGEcAAgDGEYAAgHEEIABgHAEIABhHAAIAxhGA
        AIBxBCAAYBwBCAAYRwACAMYRgACAcQQgAGAcAQgAGEcAAgDGEYAAgHEEIABgHAEIABhHAAIAxhGAAIBx
        BCAAYBwBCAAYRwACAMYRgACAcQQgAGAcAQgAGEcAAgDGEYAAgHEEIABgHAEIABhHAAIAxhGAAIBxBCAA
        YBwBCAAYRwACAMYRgACAcQQgAGAcAQgAGEcAAgDGEYAAgHEEIABgHAEIABhHAAIAxhGAAIBxBCAAYBwB
        CAAYRwACAMYRgACAcQQgAGAcAQgAGEcAAgDGEYAAgHEEIABgHAEIABhHAAIAxhGAAIBxBCAAYBwBCAAY
        RwACAMYRgACAcQQgAGAcAQgAGEcAAgDGEYAAgHEEIABgHAEIABhHAAIAxhGAAIBxBCAAYBwBCAAYRwAC
        AMYRgACAcQQgAGAcAQgAGEcAAgDGEYAAgHEEIABgHAEIABhHAAIAxhGAAIBxBCAAYBwBCAAYRwACAMYR
        gACAcQQg/r//Wvo3AJyahcf/pZ+fqgLAedl2CEAAjGPbTVfquVADAM7LthutyPNObQA4KatutPLOR7oD
        AM7InpurpPO57gOA07Hkhirj/Fa3AsDpWHJDlXH+pLsB4FxsuIlKN1/TzwDAiVhv45RrvqOfBICzsNvG
        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
        85///C8LBV1OjdjGJQAAAABJRU5ErkJggg==
</value>
  </data>
</root>